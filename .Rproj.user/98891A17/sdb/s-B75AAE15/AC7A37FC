{
    "contents" : "---\ntitle: \"Auditory Mountain\"\noutput:\n  pdf_document:\n    toc: yes\ndate: \"`r format(Sys.time(), '%B %d %Y')`\"\n---\n\n```{r global_options, include=FALSE}\nknitr::opts_chunk$set(fig.path='figures/')\n```\n\n```{r initialization, echo=FALSE, message=FALSE, warning=FALSE}\nlibrary(\"rjson\")\nlibrary(\"ggplot2\")\nlibrary(\"gridExtra\")\nlibrary(\"zoo\")\nlibrary(\"RColorBrewer\")\nrequire(gridExtra)\nrequire(zoo)\nlibrary(devtools)\nlibrary(reshape2)\nlibrary(scales)\n```\n\n```{r preProc, include=F}\n# Pre processing of the data from the first design\nsource(\"R/preProcFirstDesign.R\")\n```\n\n```{r thresholds, include=F, echo=FALSE, message=FALSE, warning=FALSE}\n# Check if there are frequency threshold data\nif ('deltaF' %in% names(data)) {\n  source(\"R/threshold.R\")\n}\n```\n\n```{r mountain, include=F, echo=FALSE, message=FALSE, warning=FALSE}\n# Check if there is any mountain trial\nif ('targetTone' %in% names(data)) {\n  # Check if there is any yAxis trial\n  if ('yAxis' %in% data$condition) {\n    source(\"R/yAxis.R\")\n  }\n\n  # Check if there is any lines trial\n  if ('lines' %in% data$condition) {\n    source(\"R/lines.R\")\n  }\n  \n  # Check if there is any circles trial\n  if ('circles' %in% data$condition) {\n    source(\"R/circles.R\")\n  }\n}\n```\n\n# Individual analyses\n\n## Frequency threshold task\n\nThe frequency thresholds are calculated from an adaptive procedure where deltaF is decreased when a wrong answer is provided and increased for a right answer. The evolution of the delta F values across trials for the detection and identification tasks is ploted bellow:\n\n```{r plotDeltaF, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotDeltaF\n\n```\n\n## Thresholds of each participant among sessions\n\nThe thresholds are calculated from the DeltaF values corresponding to the last 10 reversals. The procedure was repeated two times before training (sessions 1 and 2) and two times after (sessions 3 and 4). The figure bellow shows these thresholds across sessions for the detection and identification conditions:    \n\n```{r plotThresholds, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotThresholds\n\n```\n\n## Detection threshold in function of identification threshold\n\n```{r plotDetById, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotDetById\n\n```\n\n## Detection threshold in function of identification threshold pre vs. post tests\n\n```{r plotDetByIdPrepost, echo=FALSE, message=FALSE, warning=FALSE}\n\n# plotDetByIdPrepost\n\n```\n\n## Detection threshold in function of identification threshold first vs. second tests\n\n```{r plotDetByIdPrepre, echo=FALSE, message=FALSE, warning=FALSE}\n\n# plotDetByIdPrepre\n\n```\n\n## Auditory mountain task\n\n### Mean results (in percent error):\n\n**Y-axis**: `r mean(data.mountain.yAxis$result)`%\n\nHere are the plots of scores, accuracy and duration in function of trials. The accuracy is the difference between the choosen tone and the highest tone. The Duration is the duration in seconds of each trial. The Score is a mixed value calculated from accuracy and duration according to this equation:\n\n$$ (\\frac{1}{(\\frac{duration}{100}+1)^2} + 1) \\times (\\frac{600 \\times accuracy}{100})^2 $$\n\n***\n\nWith this equation the time score is a multiplier between 1 for a very long trial and 2 for a very short one (few seconds). Thus, the accuracy score can be doubled with speed. The accuracy score is 600 maximum (the idea was to make a score in order to have the pleasure to cross 1000 points when the performance is great). For accuracy and time, the power function is used to provide the maximum of points near the perfect score and have a lot of difference when it is harder.\n\n## Participant's scores\n\n```{r plotScores, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotScores\n\n```\n\n## Accuracy of trials\n\n```{r plotAcc, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotAcc\n\n```\n\n## Durations of trials\n\n```{r plotDur, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotDur\n\n```\n\n## Accuracy in function of duration for each trial\n\nFinally, to see if the variability of the results is associated with duration, here is the plot of scores against duration. Each point is a trial.\n\n```{r plotAccByDur, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotAccByDur\n\n```\n\n## Accuracy in function of frequency of the target tone\n\n```{r plotAccByFreq, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotAccByFreq\n\n```\n\n## Comparison of frequency thresholds and accuracy\n\n```{r plotAccThresh, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotAccThresh +\n  geom_hline(aes(yintercept=(2^(threshold/1200)-1)*100,\n                   linetype=condition),\n               meanThresholdsSubjLong,\n               show_guide=TRUE) +\n  guides(linetype = guide_legend(\"Frequency thresholds\"))\n\n```\n\n\n# Global analyses\n\n## Frequency threshold task\n\n### Mean of deltaF in function of trials in the detection and identification task\n\n```{r plotDeltaFMeans, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotDeltaFMeans\n\n```\n\n## Mean of thresholds among sessions\n\n```{r plotMeanThresholds, echo=FALSE, message=FALSE, warning=FALSE}\n\nplotMeanThresholds\n\n```\n\n## Session info\n\n```{r session_info, include=TRUE, echo=TRUE, results='markup'}\ndevtools::session_info()\n```\n  ",
    "created" : 1436345748528.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1732685870",
    "id" : "AC7A37FC",
    "lastKnownWriteTime" : 1437221816,
    "path" : "~/Dropbox/projets/en_cours/DjangoServer/auditory_mountain/auditory_mountain/r_analyses/analysis.Rmd",
    "project_path" : "analysis.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}