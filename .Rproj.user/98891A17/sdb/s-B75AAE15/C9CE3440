{
    "contents" : "library(\"rjson\")\n\n# Import Json file\njson.file.sa20 <- \"./raw_data/sa20.txt\"\njson.data.sa20 <- jsonlite::fromJSON(json.file.sa20)\n# Put data in a data frame\nraw.data.sa20 <- json.data.sa20$rows$doc\nraw.data.sa20$name <-\"sa20\"\n\n# Import Json file\njson.file.ab22 <- \"./raw_data/ab22.txt\"\njson.data.ab22 <- jsonlite::fromJSON(json.file.ab22)\n# Put data in a data frame\nraw.data.ab22 <- json.data.ab22$rows$doc\nraw.data.ab22$name <-\"ab22\"\n\n# Import Json file\njson.file.dd04 <- \"./raw_data/dd04.txt\"\njson.data.dd04 <- jsonlite::fromJSON(json.file.dd04)\n# Put data in a data frame\nraw.data.dd04 <- json.data.dd04$rows$doc\nraw.data.dd04$name <-\"dd04\"\nraw.data.dd04$tonePosX <- NA\nraw.data.dd04$tonePosY <- NA\n\n# Import Json file\njson.file.ap08 <- \"./raw_data/ap08.txt\"\njson.data.ap08 <- jsonlite::fromJSON(json.file.ap08)\n# Put data in a data frame\nraw.data.ap08 <- json.data.ap08$rows$doc\nraw.data.ap08$name <-\"ap08\"\nraw.data.ap08$tonePosX <- NA\nraw.data.ap08$tonePosY <- NA\n\n# Import Json file\njson.file.shr28 <- \"./raw_data/shr28.txt\"\njson.data.shr28 <- jsonlite::fromJSON(json.file.shr28)\n# Put data in a data frame\nraw.data.shr28 <- json.data.shr28$rows$doc\nraw.data.shr28$name <-\"shr28\"\nraw.data.shr28$tonePosX <- NA\nraw.data.shr28$tonePosY <- NA\n\n# Import Json file\njson.file.hj12 <- \"./raw_data/hj12.txt\"\njson.data.hj12 <- jsonlite::fromJSON(json.file.hj12)\n# Put data in a data frame\nraw.data.hj12 <- json.data.hj12$rows$doc\nraw.data.hj12$name <-\"hj12\"\nraw.data.hj12$tonePosX <- NA\nraw.data.hj12$tonePosY <- NA\n\n# Import Json file\njson.file.ll07_proc <- \"./raw_data/ll07_proc.txt\"\njson.data.ll07_proc <- jsonlite::fromJSON(json.file.ll07_proc)\n# Put data in a data frame\nraw.data.ll07_proc <- json.data.ll07_proc$rows$doc\nraw.data.ll07_proc$name <-\"ll07\"\nraw.data.ll07_proc$tonePosX <- NA\nraw.data.ll07_proc$tonePosY <- NA\n\nraw.data <- rbind(raw.data.sa20, raw.data.ab22, raw.data.dd04, raw.data.ap08,\n                  raw.data.shr28, raw.data.hj12, raw.data.ll07_proc)\n\n# Change the column names\ncolnames(raw.data)[1] <- \"id\"\ncolnames(raw.data)[2] <- \"rev\"\n\n# Remove unused rows (metaData and metaDataThresh are used to store data used in the app)\ndata <- raw.data[!(raw.data$id == \"metaData\"\n                   | raw.data$id == \"metaDataThresh\"\n                   | raw.data$id == \"dummy\"),]\n\n# Sort the data according to time\ndata <- data[order(data$startTrial),]\n\n\n# Forwarding reversal values to correct bug in the data collect for the subject sa20 and ab22\nfor (i in 0:length(data$reversal[data$name==\"sa20\" | data$name==\"ab22\"])) {\n  data$reversal[\n    data$name==\"sa20\" | data$name==\"ab22\"][i]=data$reversal[\n      data$name==\"sa20\" | data$name==\"ab22\"][i+1]\n}\nfor (i in 0:length(data$reversal[data$name==\"sa20\" | data$name==\"ab22\"])) {\n  data$reversals[\n    data$name==\"sa20\" | data$name==\"ab22\"][i]=data$reversals[\n      data$name==\"sa20\" | data$name==\"ab22\"][i+1]\n}\n\n# Too much trials in the threshold task before training: sessions 0, 1, 2, 3 are before.\n# Remove the session 2 and 3 and convert name of sessions 4 and 5 by 2 and 3 respectively\ndata <- subset(data, !((grepl(\"threshold2\", id)\n                        | grepl(\"threshold3\", id))\n                       & grepl(\"shr28\", name)))\ndata$id[data$name==\"shr28\"] = gsub(\"threshold4\", \"threshold2\",\n                                   data$id[data$name==\"shr28\"])\ndata$id[data$name==\"shr28\"] = gsub(\"threshold5\", \"threshold3\",\n                                   data$id[data$name==\"shr28\"])\n# Also in sessionNum\ndata$sessionNum[data$name==\"shr28\"] = gsub(\"4\", \"2\",\n                                           data$sessionNum[data$name==\"shr28\"])\ndata$sessionNum[data$name==\"shr28\"] = gsub(\"5\", \"3\",\n                                           data$sessionNum[data$name==\"shr28\"])\n\n# No session 0 for ap08 and first session post-test with bug so remove it\ndata <- subset(data, !(grepl(\"threshold3\", id)\n                       & grepl(\"ap08\", name)))\n\ndata$id[data$name==\"ap08\"] = gsub(\"threshold1\", \"threshold0\",\n                                  data$id[data$name==\"ap08\"])\ndata$id[data$name==\"ap08\"] = gsub(\"threshold2\", \"threshold1\",\n                                  data$id[data$name==\"ap08\"])\ndata$id[data$name==\"ap08\"] = gsub(\"threshold4\", \"threshold2\",\n                                  data$id[data$name==\"ap08\"])\ndata$id[data$name==\"ap08\"] = gsub(\"threshold5\", \"threshold3\",\n                                  data$id[data$name==\"ap08\"])\n# Also in sessionNum\ndata$sessionNum[data$name==\"ap08\"] = gsub(\"1\", \"0\",\n                                          data$sessionNum[data$name==\"ap08\"])\ndata$sessionNum[data$name==\"ap08\"] = gsub(\"2\", \"1\",\n                                          data$sessionNum[data$name==\"ap08\"])\ndata$sessionNum[data$name==\"ap08\"] = gsub(\"4\", \"2\",\n                                          data$sessionNum[data$name==\"ap08\"])\ndata$sessionNum[data$name==\"ap08\"] = gsub(\"5\", \"3\",\n                                          data$sessionNum[data$name==\"ap08\"])\n\n# Bad session number for ll07 because of re-start of the app\n# in the middle of the experiment (names corrected with couchdb)\ndata$sessionNum[data$name==\"ll07\"\n                & grepl(\"threshold2\",\n                        data$id)] = gsub(\"0\", \"2\",\n                                         data$sessionNum[data$name==\"ll07\"\n                                                         & grepl(\"threshold2\",\n                                                                 data$id)])\ndata$sessionNum[data$name==\"ll07\"] = gsub(\"4\", \"3\",\n                                          data$sessionNum[data$name==\"ll07\"])\n\n\n# Remove unused columns\ndata$rev <- NULL\nrow.names(data) <- NULL\n\n# Add duration variable in seconds\n# Create function to extract the last value of each matrix (= each trial) from the CurXY\nextractDur <- function(x) tail(x[,3], n=1)/1000\ndata$duration <- sapply(data$CurXY, extractDur)\n\ndata$duration <- as.numeric(data$duration)\n\n",
    "created" : 1436345754295.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2560332655",
    "id" : "C9CE3440",
    "lastKnownWriteTime" : 1437217470,
    "path" : "~/Dropbox/projets/en_cours/DjangoServer/auditory_mountain/auditory_mountain/r_analyses/R/preProcFirstDesign.R",
    "project_path" : "R/preProcFirstDesign.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}