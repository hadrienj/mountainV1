{
    "contents" : "# Analyses from the \"data\" data frame\n# Output data frame:\n#    - data.threshold (all data concerning the frequency threshold task)\n#    - thresholdsAllLong (thresh for each participant and condition)\n#    - meanThresholdLong (mean thresh among participants for each condition)\n#    - deltaFMeansLong (mean deltaF for each trial number)\n#    - meanThresholdsSubjLong (mean threshold for each subj and each condition)\n#\n# Output plots:\n#    - plotThresholds (thresh for each subject, condition and session)\n#    - plotMeanThresholds (mean thresh for each condition and session)\n#    - plotDetById (identification against detection thresh for each subject)\n#    - plotDeltaF (deltaF against trials for each subject)\n#    - plotDeltaFMeans (mean deltaF against trials)\n\n\ndata.threshold <- subset(data, grepl(\"threshold\", id),\n                         c(id, trialNum,sessionNum,sessionThreshNum,\n                           reversal,  reversals,  task,\tstartTrial,\n                           tone1, tone2,\ttone3, tone4, deltaF,\n                           goodAnswer,\troving,\tanswer,\tscore, name))\n\n############ THRESHOLD ANALYSES ############\n\n# Calculate the frequency threshold of all participants\nthresholdsAllWide <- data.frame(tapply(\n  data.threshold$deltaF[data.threshold$reversals > 4],\n  list(data.threshold$name[data.threshold$reversals > 4],\n       data.threshold$sessionNum[data.threshold$reversals > 4],\n       data.threshold$task[data.threshold$reversals > 4]),\n  mean))\nthresholdsAllreshaped1 <- reshape(thresholdsAllWide, direction= \"long\",\n                                  varying=list(1:4, 5:8),\n                                  ids=row.names(thresholdsAllWide),\n                                  idvar=\"name\",\n                                  timevar=\"session\",\n                                  times=list(\"1\",\"2\",\n                                             \"3\",\"4\"))\nthresholdsAllLong <- reshape(thresholdsAllreshaped1, direction= \"long\",\n                             varying=list(2:3),\n                             times=list(\"detection\",\"identification\"))\n# Remove unused columns\nthresholdsAllLong$id <- NULL\nrow.names(thresholdsAllLong) <- NULL\n# Rename columns\ncolnames(thresholdsAllLong)[3] <- \"condition\"\ncolnames(thresholdsAllLong)[4] <- \"threshold\"\n\n# Calculate the mean threshold for each session\nmeanThresholds <- data.frame(session = as.numeric(\n  levels(factor(thresholdsAllLong$session))),\n                             tapply(thresholdsAllLong$threshold,\n                                    list(thresholdsAllLong$session,\n                                         thresholdsAllLong$condition),\n                                    mean))\n# Reshape the data frame into long format\nmeanThresholdLong <- melt(meanThresholds, id.var=\"session\",\n                          variable.name = \"condition\", \n                          value.name = \"threshold\")\n\n# Calculate the mean threshold for each participant and each condition\nmeanThresholdsSubj <- data.frame(name = levels(\n  factor(thresholdsAllLong$name)),\n                                tapply(thresholdsAllLong$threshold,\n                                       list(thresholdsAllLong$name,\n                                            thresholdsAllLong$condition),\n                                       mean))\nmeanThresholdsSubjLong <- melt(meanThresholdsSubj, id.var=\"name\",\n                               variable.name = \"condition\", \n                               value.name = \"threshold\")\n\n# Prepare plots\n\nplotThresholds <- ggplot(data=thresholdsAllLong,\n                         aes(x=as.numeric(session),\n                             y=threshold,\n                             color=name,\n                             linetype=condition),\n                         alpha = 0.4) +\n  geom_line() +\n  xlab(\"Sessions\") +\n  ylab(\"Thresholds\") +\n  facet_grid(name ~ ., scales=\"free\") +\n  theme(panel.margin = unit(3.5, \"mm\"))\n\nplotMeanThresholds <- ggplot(data=meanThresholdLong,\n                             aes(x=session,\n                                 y=threshold,\n                                 linetype=condition),\n                             alpha = 0.4) +\n  geom_line() +\n  xlab(\"Sessions\") +\n  ylab(\"Thresholds\") +\n  ggtitle(\"Mean threshold for detection and identification conditions\")\n\nplotDetById <- ggplot(thresholdsAllLong, aes(\n      x=threshold[condition==\"detection\"],\n      y=threshold[condition==\"identification\"],\n      color=name[condition==\"identification\"]),\n      log10=\"y\") +\n    geom_point(aes(shape=session[condition==\"identification\"])) +\n    geom_abline(intercept = 0, slope = 1) +\n    scale_colour_discrete(name = \"Participants\") +\n    scale_shape(name = \"Sessions\") +\n    scale_x_continuous(limits=c(10, 400)) +\n    scale_y_continuous(limits=c(10, 400)) +\n    xlab(\"Detection threshold\") +\n    ylab(\"Identification threshold\") +\n    ggtitle(\"Detection against identification thresholds\n            \\n for all subjects and all sessions\")\n\n\n\n############ DELTAF ANALYSES ############\n\n# Compute the mean of deltaF between subjects\n# The list is the factors used (the function is applied to each levels)\ndeltaFMeans <- data.frame(tapply(data.threshold$deltaF,\n                                 list(data.threshold$trialNum,\n                                      data.threshold$sessionNum,\n                                      data.threshold$task),\n                                 mean))\n\ndeltaFMeansreshaped1 <- reshape(deltaFMeans, direction= \"long\",\n                                varying=list(1:4, 5:8),\n                                ids=row.names(deltaFMeans),\n                                idvar=\"trialNum\",\n                                timevar=\"session\",\n                                times=list(\"1\",\"2\",\n                                           \"3\",\"4\"))\n\ndeltaFMeansLong <- reshape(deltaFMeansreshaped1, direction= \"long\",\n                           varying=list(2:3),\n                           times=list(\"detection\",\"identification\"))\n# Remove unused columns\ndeltaFMeansLong$id <- NULL\nrow.names(deltaFMeansLong) <- NULL\n# Rename columns\ncolnames(deltaFMeansLong)[3] <- \"condition\"\ncolnames(deltaFMeansLong)[4] <- \"threshold\"\nrow.names(deltaFMeansLong) <- NULL\n\n# Prepare plots\n\nplotDeltaF <- ggplot(data=data.threshold,\n                     aes(x=trialNum,\n                         y=deltaF,\n                         color=factor(sessionNum)),\n                     alpha = 0.4) +\n  xlab(\"Trials\") +\n  ylab(\"DeltaF (cents)\") +\n  geom_line() +\n  scale_color_discrete(name=\"Session\") +\n  facet_grid(name ~ task, scales=\"free\") +\n  theme(panel.margin = unit(3.5, \"mm\"))\n\nplotDeltaFMeans <- ggplot(data=deltaFMeansLong,\n                          aes(x=as.numeric(trialNum),\n                              y=threshold,\n                              color=factor(session)),\n                              alpha = 0.4) +\n  geom_line() +\n  scale_color_discrete(name=\"Session\") +\n  facet_grid(. ~ condition) +\n  xlab(\"Trials\") +\n  ylab(\"DeltaF (cents)\") +\n  ggtitle(\"Mean of deltaF\")\n\n",
    "created" : 1436351801290.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1309376238",
    "id" : "4060F3EC",
    "lastKnownWriteTime" : 1437218576,
    "path" : "~/Dropbox/projets/en_cours/DjangoServer/auditory_mountain/auditory_mountain/r_analyses/R/threshold.R",
    "project_path" : "R/threshold.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}